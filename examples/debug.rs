mod geom {
    /// Loads the shader in Vulkan as a `ShaderModule`.
    #[inline]
    #[allow(unsafe_code)]
    pub fn load(
        device: ::std::sync::Arc<::vulkano::device::Device>,
    ) -> Result<
        ::std::sync::Arc<::vulkano::shader::ShaderModule>,
        ::vulkano::shader::ShaderCreationError,
    > {
        let _bytes = (b"#version 420\n\nlayout(triangles) in;\nlayout(line_strip, max_vertices = 4) out;\n\nlayout(location = 0) in float gi_exp[];\nlayout(location = 0) out float fi_exp;\n\n\n\nvoid vertex(int i)\n{\n\tgl_Position = gl_in[i].gl_Position;\n\tfi_exp = gi_exp[i];\n    EmitVertex();\n}\n\nvoid main() {\n    vertex(0);\n    vertex(1);\n    vertex(2);\n    vertex(0);\n    EndPrimitive();\n}") ;
        static WORDS: &[u32] = &[
            119734787u32,
            65536u32,
            851978u32,
            51u32,
            0u32,
            131089u32,
            2u32,
            393227u32,
            1u32,
            1280527431u32,
            1685353262u32,
            808793134u32,
            0u32,
            196622u32,
            0u32,
            1u32,
            589839u32,
            3u32,
            4u32,
            1852399981u32,
            0u32,
            19u32,
            25u32,
            33u32,
            36u32,
            196624u32,
            4u32,
            22u32,
            262160u32,
            4u32,
            0u32,
            1u32,
            196624u32,
            4u32,
            28u32,
            262160u32,
            4u32,
            26u32,
            4u32,
            196611u32,
            2u32,
            420u32,
            655364u32,
            1197427783u32,
            1279741775u32,
            1885560645u32,
            1953718128u32,
            1600482425u32,
            1701734764u32,
            1919509599u32,
            1769235301u32,
            25974u32,
            524292u32,
            1197427783u32,
            1279741775u32,
            1852399429u32,
            1685417059u32,
            1768185701u32,
            1952671090u32,
            6649449u32,
            262149u32,
            4u32,
            1852399981u32,
            0u32,
            327685u32,
            10u32,
            1953654134u32,
            1764259941u32,
            15153u32,
            196613u32,
            9u32,
            105u32,
            393221u32,
            17u32,
            1348430951u32,
            1700164197u32,
            2019914866u32,
            0u32,
            393222u32,
            17u32,
            0u32,
            1348430951u32,
            1953067887u32,
            7237481u32,
            458758u32,
            17u32,
            1u32,
            1348430951u32,
            1953393007u32,
            1702521171u32,
            0u32,
            458758u32,
            17u32,
            2u32,
            1130327143u32,
            1148217708u32,
            1635021673u32,
            6644590u32,
            196613u32,
            19u32,
            0u32,
            393221u32,
            21u32,
            1348430951u32,
            1700164197u32,
            2019914866u32,
            0u32,
            393222u32,
            21u32,
            0u32,
            1348430951u32,
            1953067887u32,
            7237481u32,
            458758u32,
            21u32,
            1u32,
            1348430951u32,
            1953393007u32,
            1702521171u32,
            0u32,
            458758u32,
            21u32,
            2u32,
            1130327143u32,
            1148217708u32,
            1635021673u32,
            6644590u32,
            262149u32,
            25u32,
            1767861351u32,
            110u32,
            262149u32,
            33u32,
            1700751718u32,
            28792u32,
            262149u32,
            36u32,
            1700751719u32,
            28792u32,
            262149u32,
            41u32,
            1634886000u32,
            109u32,
            262149u32,
            44u32,
            1634886000u32,
            109u32,
            262149u32,
            47u32,
            1634886000u32,
            109u32,
            262149u32,
            49u32,
            1634886000u32,
            109u32,
            327752u32,
            17u32,
            0u32,
            11u32,
            0u32,
            327752u32,
            17u32,
            1u32,
            11u32,
            1u32,
            327752u32,
            17u32,
            2u32,
            11u32,
            3u32,
            196679u32,
            17u32,
            2u32,
            327752u32,
            21u32,
            0u32,
            11u32,
            0u32,
            327752u32,
            21u32,
            1u32,
            11u32,
            1u32,
            327752u32,
            21u32,
            2u32,
            11u32,
            3u32,
            196679u32,
            21u32,
            2u32,
            262215u32,
            33u32,
            30u32,
            0u32,
            262215u32,
            36u32,
            30u32,
            0u32,
            131091u32,
            2u32,
            196641u32,
            3u32,
            2u32,
            262165u32,
            6u32,
            32u32,
            1u32,
            262176u32,
            7u32,
            7u32,
            6u32,
            262177u32,
            8u32,
            2u32,
            7u32,
            196630u32,
            12u32,
            32u32,
            262167u32,
            13u32,
            12u32,
            4u32,
            262165u32,
            14u32,
            32u32,
            0u32,
            262187u32,
            14u32,
            15u32,
            1u32,
            262172u32,
            16u32,
            12u32,
            15u32,
            327710u32,
            17u32,
            13u32,
            12u32,
            16u32,
            262176u32,
            18u32,
            3u32,
            17u32,
            262203u32,
            18u32,
            19u32,
            3u32,
            262187u32,
            6u32,
            20u32,
            0u32,
            327710u32,
            21u32,
            13u32,
            12u32,
            16u32,
            262187u32,
            14u32,
            22u32,
            3u32,
            262172u32,
            23u32,
            21u32,
            22u32,
            262176u32,
            24u32,
            1u32,
            23u32,
            262203u32,
            24u32,
            25u32,
            1u32,
            262176u32,
            27u32,
            1u32,
            13u32,
            262176u32,
            30u32,
            3u32,
            13u32,
            262176u32,
            32u32,
            3u32,
            12u32,
            262203u32,
            32u32,
            33u32,
            3u32,
            262172u32,
            34u32,
            12u32,
            22u32,
            262176u32,
            35u32,
            1u32,
            34u32,
            262203u32,
            35u32,
            36u32,
            1u32,
            262176u32,
            38u32,
            1u32,
            12u32,
            262187u32,
            6u32,
            43u32,
            1u32,
            262187u32,
            6u32,
            46u32,
            2u32,
            327734u32,
            2u32,
            4u32,
            0u32,
            3u32,
            131320u32,
            5u32,
            262203u32,
            7u32,
            41u32,
            7u32,
            262203u32,
            7u32,
            44u32,
            7u32,
            262203u32,
            7u32,
            47u32,
            7u32,
            262203u32,
            7u32,
            49u32,
            7u32,
            196670u32,
            41u32,
            20u32,
            327737u32,
            2u32,
            42u32,
            10u32,
            41u32,
            196670u32,
            44u32,
            43u32,
            327737u32,
            2u32,
            45u32,
            10u32,
            44u32,
            196670u32,
            47u32,
            46u32,
            327737u32,
            2u32,
            48u32,
            10u32,
            47u32,
            196670u32,
            49u32,
            20u32,
            327737u32,
            2u32,
            50u32,
            10u32,
            49u32,
            65755u32,
            65789u32,
            65592u32,
            327734u32,
            2u32,
            10u32,
            0u32,
            8u32,
            196663u32,
            7u32,
            9u32,
            131320u32,
            11u32,
            262205u32,
            6u32,
            26u32,
            9u32,
            393281u32,
            27u32,
            28u32,
            25u32,
            26u32,
            20u32,
            262205u32,
            13u32,
            29u32,
            28u32,
            327745u32,
            30u32,
            31u32,
            19u32,
            20u32,
            196670u32,
            31u32,
            29u32,
            262205u32,
            6u32,
            37u32,
            9u32,
            327745u32,
            38u32,
            39u32,
            36u32,
            37u32,
            262205u32,
            12u32,
            40u32,
            39u32,
            196670u32,
            33u32,
            40u32,
            65754u32,
            65789u32,
            65592u32,
        ];
        unsafe {
            Ok(::vulkano::shader::ShaderModule::from_words_with_data(
                device,
                WORDS,
                ::vulkano::Version {
                    major: 1u32,
                    minor: 0u32,
                    patch: 0u32,
                },
                [&::vulkano::shader::spirv::Capability::Geometry],
                [],
                [(
                    "main".to_owned(),
                    ::vulkano::shader::spirv::ExecutionModel::Geometry,
                    ::vulkano::shader::EntryPointInfo {
                        execution: ::vulkano::shader::ShaderExecution::Geometry {
                            input: GeometryShaderInput::Triangles,
                        },
                        descriptor_requirements: [].into_iter().collect(),
                        push_constant_requirements: None,
                        specialization_constant_requirements: [].into_iter().collect(),
                        input_interface: unsafe {
                            ::vulkano::shader::ShaderInterface::new_unchecked(<[_]>::into_vec(
                                box [::vulkano::shader::ShaderInterfaceEntry {
                                    location: 0u32,
                                    component: 0u32,
                                    ty: ::vulkano::shader::ShaderInterfaceEntryType {
                                        base_type: ::vulkano::shader::ShaderScalarType::Float,
                                        num_components: 1u32,
                                        num_elements: 1u32,
                                        is_64bit: false,
                                    },
                                    name: Some(::std::borrow::Cow::Borrowed("gi_exp")),
                                }],
                            ))
                        },
                        output_interface: unsafe {
                            ::vulkano::shader::ShaderInterface::new_unchecked(<[_]>::into_vec(
                                box [::vulkano::shader::ShaderInterfaceEntry {
                                    location: 0u32,
                                    component: 0u32,
                                    ty: ::vulkano::shader::ShaderInterfaceEntryType {
                                        base_type: ::vulkano::shader::ShaderScalarType::Float,
                                        num_components: 1u32,
                                        num_elements: 1u32,
                                        is_64bit: false,
                                    },
                                    name: Some(::std::borrow::Cow::Borrowed("fi_exp")),
                                }],
                            ))
                        },
                    },
                )],
            )?)
        }
    }
    #[allow(non_snake_case)]
    #[repr(C)]
    pub struct SpecializationConstants {}
    #[automatically_derived]
    #[allow(unused_qualifications)]
    #[allow(non_snake_case)]
    impl ::core::fmt::Debug for SpecializationConstants {
        fn fmt(&self, f: &mut ::core::fmt::Formatter) -> ::core::fmt::Result {
            match *self {
                SpecializationConstants {} => {
                    let debug_trait_builder =
                        &mut ::core::fmt::Formatter::debug_struct(f, "SpecializationConstants");
                    ::core::fmt::DebugStruct::finish(debug_trait_builder)
                }
            }
        }
    }
    #[automatically_derived]
    #[allow(unused_qualifications)]
    #[allow(non_snake_case)]
    impl ::core::marker::Copy for SpecializationConstants {}
    #[automatically_derived]
    #[allow(unused_qualifications)]
    #[allow(non_snake_case)]
    impl ::core::clone::Clone for SpecializationConstants {
        #[inline]
        fn clone(&self) -> SpecializationConstants {
            {
                *self
            }
        }
    }
    impl Default for SpecializationConstants {
        fn default() -> SpecializationConstants {
            SpecializationConstants {}
        }
    }
    unsafe impl ::vulkano::shader::SpecializationConstants for SpecializationConstants {
        fn descriptors() -> &'static [::vulkano::shader::SpecializationMapEntry] {
            static DESCRIPTORS: [::vulkano::shader::SpecializationMapEntry; 0usize] = [];
            &DESCRIPTORS
        }
    }
    pub mod ty {}
}
